<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">
	<persistence-unit name="dev" transaction-type="RESOURCE_LOCAL">
		<!-- <class>org.hibernate.ejb.test.Cat</class> -->
		<!-- <class>org.hibernate.ejb.test.Distributor</class> -->
		<!-- <class>org.hibernate.ejb.test.Item</class> -->
		<properties>
			<property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect" />
			<property name="hibernate.hbm2ddl.auto" value="create" />
			<property name="hibernate.show_sql" value="true" />

			<property name="toplink.target-database" value="HSQL" />
			<property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver" />
			<property name="hibernate.connection.username" value="sa" />
			<property name="hibernate.connection.password" value="" />
			<property name="hibernate.connection.url" value="jdbc:hsqldb:hsql://localhost/" />
			<property name="hibernate.max_fetch_depth" value="3" />

			<!-- cache configuration -->
			<!-- <property name="hibernate.ejb.classcache.org.hibernate.ejb.test.Item" 
				value="read-write"/> -->
			<!-- <property name="hibernate.ejb.collectioncache.org.hibernate.ejb.test.Item.distributors" 
				value="read-write, RegionName"/> -->

			<!-- alternatively to <class> and <property> declarations, you can use 
				a regular hibernate.cfg.xml file -->
			<!-- property name="hibernate.ejb.cfgfile" value="/org/hibernate/ejb/test/hibernate.cfg.xml"/ -->
		</properties>
	</persistence-unit>
	<persistence-unit name="prod" transaction-type="RESOURCE_LOCAL">
		<!-- <class>org.hibernate.ejb.test.Cat</class> -->
		<!-- <class>org.hibernate.ejb.test.Distributor</class> -->
		<!-- <class>org.hibernate.ejb.test.Item</class> -->
		<properties>
			<property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect" />
			<property name="hibernate.hbm2ddl.auto" value="create" />
			<property name="toplink.target-database" value="HSQL" />
			<property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver" />
			<property name="hibernate.connection.username" value="sa" />
			<property name="hibernate.connection.password" value="" />
			<property name="hibernate.connection.url" value="jdbc:hsqldb:hsql://localhost/" />
			<property name="hibernate.max_fetch_depth" value="3" />

			<!-- cache configuration -->
			<!-- <property name="hibernate.ejb.classcache.org.hibernate.ejb.test.Item" 
				value="read-write"/> -->
			<!-- <property name="hibernate.ejb.collectioncache.org.hibernate.ejb.test.Item.distributors" 
				value="read-write, RegionName"/> -->

			<!-- alternatively to <class> and <property> declarations, you can use 
				a regular hibernate.cfg.xml file -->
			<!-- property name="hibernate.ejb.cfgfile" value="/org/hibernate/ejb/test/hibernate.cfg.xml"/ -->
		</properties>
	</persistence-unit>

	<persistence-unit name="mysql">
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		<class>fr.istic.taaproject.model.Car</class>
		<class>fr.istic.taaproject.model.Comment</class>
		<class>fr.istic.taaproject.model.Event</class>
		<class>fr.istic.taaproject.model.User</class>
		<class>fr.istic.taaproject.model.Participation</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/taa" />
			<property name="javax.persistence.jdbc.user" value="root" />
			<property name="javax.persistence.jdbc.password" value="root" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />
			<property name="hibernate.show_sql" value="true" />

			<property name="hibernate.hbm2ddl.auto" value="update" />
		</properties>
	</persistence-unit>

</persistence>